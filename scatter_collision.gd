extends Node3D

func _ready():
	for child in get_children():
		if child is MultiMeshInstance3D:
			print("üîé –ü—Ä–æ–Ω–∞—ò–¥–µ–Ω MultiMeshInstance3D:", child.name)
			generate_collision_for_multimesh(child)

func generate_collision_for_multimesh(multimesh_instance):
	var multimesh = multimesh_instance.multimesh
	if not multimesh:
		print("‚ùå MultiMeshInstance3D –Ω–µ–º–∞ MultiMesh:", multimesh_instance.name)
		return  

	for i in range(multimesh.instance_count):
		var transform_data = multimesh.get_instance_transform(i)

		# –°–æ–∑–¥–∞–≤–∞–º–µ StaticBody3D –∑–∞ —Å–µ–∫–æ—ò–∞ mesh –∏–Ω—Å—Ç–∞–Ω—Ü–∞
		var static_body = StaticBody3D.new()
		static_body.transform = transform_data

		# **–ü–æ—Å—Ç–∞–≤—É–≤–∞—ö–µ –Ω–∞ Collision Layer –∏ Mask**
		static_body.collision_layer = 1 << 4  # Layer 4 –∑–∞ –∫–∞–º–µ—ö–∞
		static_body.collision_mask = (1 << 3) | (1 << 1)  # –î–µ—Ç–µ–∫—Ç–∏—Ä–∞ –∫—Ä–∏—Å—Ç–∞–ª–∏ (3) –∏ –ø–æ–¥ (1)

		# –î–æ–¥–∞—ò StaticBody3D –≤–æ —Å—Ü–µ–Ω–∞—Ç–∞ –ø–æ–¥ `rocks`
		multimesh_instance.add_child(static_body)
		print("‚úÖ StaticBody3D –¥–æ–¥–∞–¥–µ–Ω:", static_body)

		# –î–æ–¥–∞–≤–∞—ö–µ –Ω–∞ CollisionShape3D
		var collision_shape = CollisionShape3D.new()
		var box_shape = BoxShape3D.new()
		box_shape.extents = Vector3(1, 1, 1)  # –ü—Ä–∏–ª–∞–≥–æ–¥–∏ —ò–∞ –≥–æ–ª–µ–º–∏–Ω–∞—Ç–∞
		collision_shape.shape = box_shape

		static_body.add_child(collision_shape)
		print("‚úÖ CollisionShape3D –¥–æ–¥–∞–¥–µ–Ω:", collision_shape)
